				AFFECTATION

#0	lvalue
This term designes a modifable variable that cans receive a new
value of this operator. It isn't the case of the variable with
[ const ] or the arrays.

#1              BINARY OPERATORS
#2      Operators
There are eleve operators :
3# = 3# => It affectes a value to an lvalue variable;
3# += 3# => Addition;
3# -= 3# => Soustraction;
3# *= 3# => Multiplication;
3# /= 3# => Division;
3# %= 3# => Modulo;
3# &= 3# => And;
3# |= 3# => Or;
3# ^= 3# => Xor;
3# <<= 3# => Bit decalage on left;
3# >>= 3# => Bit decalage on right;

#2	Priotities
These operators passes after the others and it has a persual
from the right to the left. These have the same priority also.
Ex :
int e, a;
e = a = 5; // It's the same than : e = (a = 5); or a = 5; e = a;
