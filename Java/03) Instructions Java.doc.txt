				INSTRUCTIONS

#1		CONDITIONAL INSTRUCTIONS

#3	if, else, switch

The if and else instructions permits to check a condition.
If the 'if' receives a true, it executes its own code else
it's the next 'else' that executes its code.

The 'switch' permits to test several equality condition about
the passed value; The switch needs 3# case 3# and 3# break 3#
instructions to be built.

ConditionalInstructions.java : 2// 
public class ConditionalInstructions{     
    public static void main(String[] args){    
        int test = 14;               
        if(test == 16){                   
            System.out.println("Test equals 16 !!");
        }                            
        else{                        
            System.out.println("Test doesn't equal 16 !!");
        }                            
        test = 16;                   
        if(test == 16){                   
            System.out.println("Test equals 16 !!");
        }                            
        else if(test == 22){              
            System.out.println("Test = 22....");
        }                            
        else{                             
            System.out.println("Test doesn't equal 16 !!");
        }                            
                                     
                                     
        for(test = 0; test < 5; test++){  
            switch(test){                 
                case 0:                   
                    System.out.println("It's the first loop !!");
                    break;                
                case 1:                   
                    System.out.println("It's the second loop !!");
                    break;                
                default:                  
                    System.out.println("It's the " + (test + 1) + "th loop.");
            }                        
        }                            
                                     
    }                                
}
 2//

In the console : 2# 
racteur@rogy:~/Documents/informatic/Java/EXAMPLE_03$ javac ConditionalInstructions.java 
racteur@rogy:~/Documents/informatic/Java/EXAMPLE_03$ java ConditionalInstructions 
Test doesn't equal 16 !!
Test equals 16 !!
It's the first loop !!
It's the second loop !!
It's the 3th loop.
It's the 4th loop.
It's the 5th loop.
 2#

#1		LOOPING INSTRUCTIONS

#3	do, while, for
These keywords permits to create four different type of loop.
Each loop works while a certain condition is respected else
it's stopped.

#3	break
This keyword permits to stop the loop even if the condition
is still available.

#3	continue
This keyword stops the current loop and passes directly to the
next without finishing the current loop.

LoopingInstructions.java : 2// 
public class LoopingInstructions{            
    static final int limit = 3;           
    public static void main(String[] args){
                                          
        int i;                            
        i = 0;                            
        while(i < limit){                 
            System.out.println("From while loop : " + i);
            i++;                          
        }                                 
                                          
        i = 0;                            
        do{                               
            System.out.println("From do-while loop : " + i);
            i++;                          
        }while((i < limit) && (i != 0));  
                                          
        int[] lst = new int[limit];       
        for(i = 0; i < limit; i++){       
            System.out.println("From for loop : " + i);
            lst[i] = i;                   
        }                                 
                                          
        for(int each : lst){              
            System.out.println("From for-each loop : " + each);
        }                                 
                                          
        /*                                
            =================================================
        */                                
                                          
        i = 0;                            
        while(true){                      
            System.out.println("_TEST_BREAK_" + i + "_");
            if(i == limit){               
                break;                    
            }                             
            System.out.println("From while-break loop : " + i);
            i++;                          
        }                                 
                                          
        i = 0;                            
        boolean flag = true;              
        while(i < limit){                 
            System.out.println("From while-continue loop : " + i);
            if(true){                     
                i++;                      
                continue;                 
            }                             
            System.out.println("Never printed !!");
            i = 0; // Never executed !!   
        }                                 
                                          
    }                                     
}
 2//

In the console : 2# 
racteur@rogy:~/Documents/informatic/Java/EXAMPLE_03$ javac LoopingInstructions.java 
racteur@rogy:~/Documents/informatic/Java/EXAMPLE_03$ java LoopingInstructions 
From while loop : 0
From while loop : 1
From while loop : 2
From do-while loop : 0
From do-while loop : 1
From do-while loop : 2
From for loop : 0
From for loop : 1
From for loop : 2
From for-each loop : 0
From for-each loop : 1
From for-each loop : 2
_TEST_BREAK_0_
From while-break loop : 0
_TEST_BREAK_1_
From while-break loop : 1
_TEST_BREAK_2_
From while-break loop : 2
_TEST_BREAK_3_
From while-continue loop : 0
From while-continue loop : 1
From while-continue loop : 2
 2#

#1		TARGETING INSTRUCTIONS

#3	continue, break

It's only available for loops.

#1		EXCEPTION INSTRUCTIONS

A file.dox.txt is dedied about this subject !!
